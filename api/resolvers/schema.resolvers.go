package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.40

import (
	"context"
	"fmt"
	"orion/generic-api-starter/api/generated"
	"orion/generic-api-starter/api/generated/model"
)

// CreateRun is the resolver for the createRun field.
func (r *mutationResolver) CreateRun(ctx context.Context, input model.NewRun) (*model.Run, error) {

	run_db_model, err := r.Resolver.QUERIES.CreateRun(ctx, input.Title)

	if err != nil {
		return nil, err
	}

	run := model.Run{ID: fmt.Sprint(run_db_model.ID), Title: run_db_model.Title}

	return &run, err
}

// Runs is the resolver for the runs field.
func (r *queryResolver) Runs(ctx context.Context) ([]*model.Run, error) {

}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
